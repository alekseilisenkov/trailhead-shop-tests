plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.14.0",
    selenideVersion = "5.24.0",
    junitVersion = "5.8.1"


allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    aspectjVersion = "1.9.6"
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.6",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.aeonbits.owner:owner:1.0.12",
            "org.assertj:assertj-core:3.19.0",
            "org.slf4j:slf4j-simple:1.7.29",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "org.aspectj:aspectjweaver:1.9.6")
    testRuntimeOnly('org.slf4j:slf4j-simple:1.7.29',
            "org.junit.jupiter:junit-jupiter-engine:5.8.2")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())

    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task simple_tests(type: Test) {
    useJUnitPlatform {
        includeTags 'Simple'
    }
}

task maintests(type: Test) {
    useJUnitPlatform {
        includeTags 'Main'
    }
}

task authtests(type: Test) {
    useJUnitPlatform {
        includeTags 'Auth'
    }
}

task alltests(type: Test) {
    useJUnitPlatform {    }
}